datos_ap=# \d+ solicitudes_activacion;                                                                                                                                                                                        
                                                                     Table "public.solicitudes_activacion"                                                                                                                    
      Column      |           Type           | Collation | Nullable |                      Default                       | Storage  | Compression | Stats target | Description                                                
------------------+--------------------------+-----------+----------+----------------------------------------------------+----------+-------------+--------------+-------------                                               
 id               | integer                  |           | not null | nextval('solicitudes_activacion_id_seq'::regclass) | plain    |             |              |                                                            
 id_usuario       | integer                  |           | not null |                                                    | plain    |             |              |                                                            
 plan_solicitado  | character varying(50)    |           | not null |                                                    | extended |             |              |                                                            
 ruta_comprobante | character varying(255)   |           | not null |                                                    | extended |             |              |                                                            
 estado           | character varying(20)    |           | not null | 'PENDIENTE'::character varying                     | extended |             |              |                                                            
 fecha_solicitud  | timestamp with time zone |           | not null | CURRENT_TIMESTAMP                                  | plain    |             |              |                                                            
 fecha_revision   | timestamp with time zone |           |          |                                                    | plain    |             |              |                                                            
 revisado_por     | integer                  |           |          |                                                    | plain    |             |              |                                                            
 created_at       | timestamp with time zone |           | not null | CURRENT_TIMESTAMP                                  | plain    |             |              |                                                            
 created_by       | integer                  |           |          |                                                    | plain    |             |              |                                                            
Indexes:                                                                                                                                                                                                                      
    "solicitudes_activacion_pkey" PRIMARY KEY, btree (id)                                                                                                                                                                     
    "idx_solicitudes_estado" btree (estado)                                                                                                                                                                                   
    "idx_solicitudes_user_id" btree (id_usuario)                                                                                                                                                                              
Check constraints:                                                                                                                                                                                                            
    "solicitudes_activacion_estado_check" CHECK (estado::text = ANY (ARRAY['PENDIENTE_PAGO'::character varying, 'PENDIENTE_REVISION'::character varying, 'APROBADO'::character varying, 'RECHAZADO'::character varying, 'CERRA
DO'::character varying]::text[]))                                                                                                                                                                                             
Foreign-key constraints:                                                                                                                                                                                                      
    "fk_created_by" FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL                                                                                                                                          
    "fk_reviewer_id" FOREIGN KEY (revisado_por) REFERENCES users(id) ON DELETE SET NULL                                                                                                                                       
    "fk_user_id" FOREIGN KEY (id_usuario) REFERENCES users(id) ON DELETE CASCADE                                                                                                                                              
Access method: heap                                                    
datos_ap=# \d+ planes;                                                                                                                                                                                                        
                                                                      Table "public.planes"                                                                                                                                   
   Column    |            Type             | Collation | Nullable |                 Default                 | Storage  | Compression | Stats target | Description                                                             
-------------+-----------------------------+-----------+----------+-----------------------------------------+----------+-------------+--------------+-------------                                                            
 id_plan     | integer                     |           | not null | nextval('planes_id_plan_seq'::regclass) | plain    |             |              |                                                                         
 nombre_plan | character varying(100)      |           | not null |                                         | extended |             |              |                                                                         
 recurrencia | character varying(30)       |           | not null |                                         | extended |             |              |                                                                         
 costo_total | numeric(15,2)               |           | not null |                                         | main     |             |              |                                                                         
 max_cuentas | integer                     |           | not null | 1                                       | plain    |             |              |                                                                         
 created_at  | timestamp without time zone |           |          | CURRENT_TIMESTAMP                       | plain    |             |              |                                                                         
 updated_at  | timestamp without time zone |           |          | CURRENT_TIMESTAMP                       | plain    |             |              |                                                                         
Indexes:                                                                                                                                                                                                                      
    "planes_pkey" PRIMARY KEY, btree (id_plan)                                                                                                                                                                                
Check constraints:                                                                                                                                                                                                            
    "planes_recurrencia_check" CHECK (recurrencia::text = ANY (ARRAY['Mensual'::character varying, 'Anual'::character varying, 'Semestral'::character varying]::text[]))                                                      
Referenced by:                                                                                                                                                                                                                
    TABLE "usuarios_suscripciones" CONSTRAINT "usuarios_suscripciones_id_plan_fkey" FOREIGN KEY (id_plan) REFERENCES planes(id_plan) ON DELETE RESTRICT                                                                       
Access method: heap
datos_ap=# \d+ suscripcion_cuentas_gestion;                                                                                                                                                                                   
                                                                             Table "public.suscripcion_cuentas_gestion"                                                                                                       
        Column         |            Type             | Collation | Nullable |                             Default                              | Storage  | Compression | Stats target | Description                          
-----------------------+-----------------------------+-----------+----------+------------------------------------------------------------------+----------+-------------+--------------+-------------                         
 id_registro           | integer                     |           | not null | nextval('suscripcion_cuentas_gestion_id_registro_seq'::regclass) | plain    |             |              |                                      
 id_suscripcion        | integer                     |           | not null |                                                                  | plain    |             |              |                                      
 created_by            | integer                     |           | not null |                                                                  | plain    |             |              |                                      
 id_usuario_secundario | integer                     |           |          |                                                                  | plain    |             |              |                                      
 email_invitado        | character varying(100)      |           | not null |                                                                  | extended |             |              |                                      
 nombre_completo       | character varying(100)      |           |          |                                                                  | extended |             |              |                                      
 estado_invitacion     | character varying(30)       |           | not null |                                                                  | extended |             |              |                                      
 created_at            | timestamp without time zone |           |          | CURRENT_TIMESTAMP                                                | plain    |             |              |                                      
 updated_at            | timestamp without time zone |           |          | CURRENT_TIMESTAMP                                                | plain    |             |              |                                      
Indexes:                                                                                                                                                                                                                      
    "suscripcion_cuentas_gestion_pkey" PRIMARY KEY, btree (id_registro)                                                                                                                                                       
    "suscripcion_cuentas_gestion_email_invitado_key" UNIQUE CONSTRAINT, btree (email_invitado)                                                                                                                                
    "uix_cuenta_suscripcion_email" UNIQUE, btree (id_suscripcion, email_invitado)                                                                                                                                             
Check constraints:                                                                                                                                                                                                            
    "suscripcion_cuentas_gestion_estado_invitacion_check" CHECK (estado_invitacion::text = ANY (ARRAY['PENDIENTE_INVITACION'::character varying, 'ACEPTADA'::character varying, 'RECHAZADA'::character varying, 'EXPIRADA'::ch
aracter varying]::text[]))                                                                                                                                                                                                    
Foreign-key constraints:                                                                                                                                                                                                      
    "suscripcion_cuentas_gestion_created_by_fkey" FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE RESTRICT                                                                                                            
    "suscripcion_cuentas_gestion_id_suscripcion_fkey" FOREIGN KEY (id_suscripcion) REFERENCES usuarios_suscripciones(id_suscripcion) ON DELETE CASCADE                                                                        
    "suscripcion_cuentas_gestion_id_usuario_secundario_fkey" FOREIGN KEY (id_usuario_secundario) REFERENCES users(id) ON DELETE SET NULL                                                                                      
Access method: heap
datos_ap=# \d+ usuarios_suscripciones;                                                                                                                                                                                        
                                                                              Table "public.usuarios_suscripciones"                                                                                                           
        Column        |            Type             | Collation | Nullable |                            Default                             | Storage  | Compression | Stats target | Description                             
----------------------+-----------------------------+-----------+----------+----------------------------------------------------------------+----------+-------------+--------------+-------------                            
 id_suscripcion       | integer                     |           | not null | nextval('usuarios_suscripciones_id_suscripcion_seq'::regclass) | plain    |             |              |                                         
 id_usuario_principal | integer                     |           | not null |                                                                | plain    |             |              |                                         
 id_plan              | integer                     |           | not null |                                                                | plain    |             |              |                                         
 id_admin_verificador | integer                     |           |          |                                                                | plain    |             |              |                                         
 monto_transferido    | numeric(15,2)               |           | not null |                                                                | main     |             |              |                                         
 fecha_pago_reportada | date                        |           | not null |                                                                | plain    |             |              |                                         
 comprobante_url      | character varying(255)      |           | not null |                                                                | extended |             |              |                                         
 estado               | character varying(30)       |           | not null |                                                                | extended |             |              |                                         
 fecha_habilitacion   | timestamp without time zone |           |          |                                                                | plain    |             |              |                                         
 fecha_vencimiento    | date                        |           |          |                                                                | plain    |             |              |                                         
 created_at           | timestamp without time zone |           |          | CURRENT_TIMESTAMP                                              | plain    |             |              |                                         
 updated_at           | timestamp without time zone |           |          | CURRENT_TIMESTAMP                                              | plain    |             |              |                                         
Indexes:                                                                                                                                                                                                                      
    "usuarios_suscripciones_pkey" PRIMARY KEY, btree (id_suscripcion)                                                                                                                                                         
    "idx_suscripciones_estado" btree (estado)                                                                                                                                                                                 
    "idx_suscripciones_usuario" btree (id_usuario_principal)                                                                                                                                                                  
Check constraints:                                                                                                                                                                                                            
    "usuarios_suscripciones_estado_check" CHECK (estado::text = ANY (ARRAY['PENDIENTE_VERIFICACION'::character varying, 'ACTIVO'::character varying, 'EXPIRADO'::character varying, 'CANCELADO'::character varying]::text[])) 
Foreign-key constraints:                                                                                                                                                                                                      
    "usuarios_suscripciones_id_admin_verificador_fkey" FOREIGN KEY (id_admin_verificador) REFERENCES users(id) ON DELETE SET NULL                                                                                             
    "usuarios_suscripciones_id_plan_fkey" FOREIGN KEY (id_plan) REFERENCES planes(id_plan) ON DELETE RESTRICT                                                                                                                 
    "usuarios_suscripciones_id_usuario_principal_fkey" FOREIGN KEY (id_usuario_principal) REFERENCES users(id) ON DELETE CASCADE                                                                                              
Referenced by:                                                                                                                                                                                                                
    TABLE "suscripcion_cuentas_gestion" CONSTRAINT "suscripcion_cuentas_gestion_id_suscripcion_fkey" FOREIGN KEY (id_suscripcion) REFERENCES usuarios_suscripciones(id_suscripcion) ON DELETE CASCADE                         
Access method: heap 
                                                                        Table "public.users"                                                                                                                                  
      Column       |            Type             | Collation | Nullable |               Default               | Storage  | Compression | Stats target | Description                                                           
-------------------+-----------------------------+-----------+----------+-------------------------------------+----------+-------------+--------------+-------------                                                          
 id                | integer                     |           | not null | nextval('users_id_seq'::regclass)   | plain    |             |              |                                                                       
 username          | character varying(50)       |           | not null |                                     | extended |             |              |                                                                       
 email             | character varying(100)      |           | not null |                                     | extended |             |              |                                                                       
 password_hash     | character varying(255)      |           | not null |                                     | extended |             |              |                                                                       
 created_at        | timestamp with time zone    |           |          | CURRENT_TIMESTAMP                   | plain    |             |              |                                                                       
 rol               | character varying(50)       |           | not null | 'PENDIENTE_PAGO'::character varying | extended |             |              |                                                                       
 first_name        | character varying(50)       |           | not null |                                     | extended |             |              |                                                                       
 last_name         | character varying(50)       |           | not null |                                     | extended |             |              |                                                                       
 last_login        | timestamp with time zone    |           |          | CURRENT_TIMESTAMP                   | plain    |             |              |                                                                       
 telefono          | character varying(20)       |           | not null |                                     | extended |             |              |                                                                       
 direccion         | text                        |           | not null |                                     | extended |             |              |                                                                       
 cedula            | text                        |           | not null |                                     | extended |             |              |                                                                       
 ruc               | character varying(20)       |           |          |                                     | extended |             |              |                                                                       
 suscripcion_vence | timestamp without time zone |           |          |                                     | plain    |             |              |                                                                       
 updated_at        | timestamp without time zone |           |          | now()                               | plain    |             |              |                                                                       
Indexes:                                                                                                                                                                                                                      
    "users_pkey" PRIMARY KEY, btree (id)                                                                                                                                                                                      
    "users_email_key" UNIQUE CONSTRAINT, btree (email)       
------------------------------
🔍 1. Análisis de Rutas de Administración de Usuarios y Suscripciones
Basado en los servicios y llamadas api.get/api.put/api.post en los archivos UsersManagement.vue, admin.subscription.service.js y SubscriptionRequestsManagement.vue (o su versión antigua SolicitudesSuscripcion.vue), estas son las rutas de backend utilizadas o requeridas:
Componente/Servicio	Método	Ruta (Endpoint Requerido)	Descripción y Propósito
UsersManagement.vue	GET	/admin/users	Obtener todos los usuarios (Lista de gestión).
UsersManagement.vue	PUT	/admin/users/:id	Actualizar la información y el rol de un usuario específico.
admin.subscription.service.js	GET	/subscription/admin/pending-requests	Obtener solicitudes de pago pendientes de revisión (Usuarios con rol PENDIENTE_REVISION o PENDIENTE_PAGO).
admin.subscription.service.js	POST	/subscription/admin/approve/:id	Aprobar una solicitud de suscripción. (Debe cambiar el rol a editor o similar).
admin.subscription.service.js	POST	/subscription/admin/reject/:id	Rechazar una solicitud de suscripción. (Debe mantener/cambiar el rol a PENDIENTE_PAGO).
suscripcion.js (Store)	POST	(vía authService.submitPaymentProof)	Subir comprobante de pago. (Debe cambiar el rol del usuario a PENDIENTE_REVISION).
Exportar a Hojas de cálculo
⚙️ 2. Funciones de Control del Administrador (Integración de Suscripciones y Usuarios)
El sistema ya implementa una clara separación entre la gestión de usuarios (UsersManagement.vue) y la gestión de solicitudes de suscripción (SubscriptionRequestsManagement.vue/admin.subscription.js). La integración se logra al nivel del Backend Controller que maneja las acciones, especialmente handleRequestAction.
Control de Suscripción y Pago
Tarea del Administrador	Componente/Store	Función Específica	Lógica de Control y Enlaces
Ver Solicitudes	SubscriptionRequestsManagement.vue	mappedPendingRequests (computed)	Filtra y mapea las solicitudes cargadas por adminStore.fetchPendingRequests().
Ver Comprobante	SubscriptionRequestsManagement.vue	openComprobante(url)	Abre un modal (v-dialog) con la imagen del comprobante y proporciona un enlace de descarga.
Aprobar Pago	SubscriptionRequestsManagement.vue	handleAction(id, 'approve')	Llama a adminStore.handleRequestAction(id, 'approve'). Esta es la función crítica en el backend.
Rechazar Pago	SubscriptionRequestsManagement.vue	handleAction(id, 'reject')	Llama a adminStore.handleRequestAction(id, 'reject').
Controlar Tipo/Plan	SubscriptionRequestsManagement.vue	Tabla de datos	Muestra el campo plan_solicitado (o plan_id en la versión anterior), permitiendo al Admin verificar contra el monto_transferido.
Exportar a Hojas de cálculo
Cambios de Rol (Liberación del Usuario)
El proceso de liberación del usuario está contenido en la acción de backend invocada por handleRequestAction(solicitudId, 'approve').
Secuencia de Liberación (Aprobación):
El Admin hace clic en Aprobar en la solicitud X.
Se llama a la ruta /subscription/admin/approve/:id.
Backend Controller (Requerido):
Busca la solicitud de ID X.
Verifica los datos (opcional: plan/monto).
Actualiza el rol del Usuario asociado de PENDIENTE_REVISION a editor (o el rol activo correspondiente al plan).
Actualiza el estado de la Solicitud a Aprobada.
Crea/Actualiza la suscripción activa del usuario (fecha de inicio, fecha de fin, plan ID).
Devuelve un mensaje de éxito.
El Store (admin.subscription.js) refresca la lista de solicitudes y notifica al usuario.
Secuencia de Rechazo (Manejo de Pago no Realizado):
El Admin hace clic en Rechazar en la solicitud Y.
Se llama a la ruta /subscription/admin/reject/:id.
Backend Controller (Requerido):
Busca la solicitud de ID Y.
Actualiza el rol del Usuario asociado de PENDIENTE_REVISION a PENDIENTE_PAGO.
Actualiza el estado de la Solicitud a Rechazada.
Devuelve un mensaje de rechazo (anuncio de pago no realizado).
El Store refresca la lista de solicitudes y notifica al usuario.
3. Informe de Todas las Funciones (Frontend)
Este informe cubre las principales funciones expuestas en los archivos Vue y Pinia Store.
3.1. Funciones en SubscriptionRequestsManagement.vue
Función	Propósito	Vínculo con Store/Acciones
mappedPendingRequests (Computed)	Transforma los datos brutos del adminStore.pendingRequests para la tabla, incluyendo formateo de fecha (fecha_subida) y construcción de la URL completa del comprobante (comprobanteUrl).	Depende del adminStore.pendingRequests.
openComprobante(url)	Configura la URL de la imagen y abre el modal de visualización de comprobantes.	Modifica currentComprobanteUrl y showImageModal.
handleAction(requestId, action)	Ejecuta la acción de aprobar o rechazar una solicitud.	Llama a la acción crítica adminStore.handleRequestAction.
onMounted	Hook del ciclo de vida.	Inicia la carga de datos con adminStore.fetchPendingRequests().
Exportar a Hojas de cálculo
3.2. Funciones en admin.subscription.js (Pinia Store)
Función	Propósito	Comentarios
fetchPendingRequests()	Carga la lista de solicitudes pendientes desde el backend.	Usa adminSubscriptionService.getPendingRequests(). Maneja el estado isLoadingRequests y notifica (snackbar). Implementa lógica de robustez para la respuesta del backend.
handleRequestAction(solicitudId, action)	Ejecuta la aprobación o rechazo de una solicitud.	Usa adminSubscriptionService.handleRequestAction(). Maneja el estado isProcessingAction. Optimista: Filtra el elemento de la lista inmediatamente. Seguro: Vuelve a llamar a fetchPendingRequests() al finalizar (éxito o error) para asegurar la consistencia.
Exportar a Hojas de cálculo
3.3. Funciones en UsersManagement.vue
Función	Propósito	Vínculo con Store/Acciones
fetchUsers()	Carga la lista completa de usuarios.	Llama a la ruta /admin/users. Verifica permisos con authStore.isAdmin.
openEditModal(user)	Prepara el modal de edición con los datos del usuario seleccionado.	Clona los datos a selectedUser.
updateUser()	Guarda los cambios del usuario editado (incluyendo el rol).	Llama a la ruta PUT /admin/users/:id. Si el Admin se auto-edita, llama a authStore.fetchUser() para actualizar su propio token/estado de Pinia (esencial si cambia su propio rol).
onMounted	Hook del ciclo de vida.	Inicia la carga de usuarios con fetchUsers().
Exportar a Hojas de cálculo
🗄️ 4. Tablas Vinculadas (Modelo de Datos Sugerido)
El sistema de administración de usuarios y suscripciones opera con un mínimo de tres tablas centrales. La integración de los archivos proporcionados confirma la necesidad de estas entidades para la lógica de negocio.
Tabla (Nombre Sugerido)	Propósito/Datos Clave	Vínculos con Archivos
Usuarios (users)	Almacena la información del perfil y el ROL actual (ej: administrador, editor, PENDIENTE_REVISION, PENDIENTE_PAGO).	UsersManagement.vue (Edición de rol), admin.subscription.js (Actualización de rol por aprobación/rechazo), suscripcion.js (Actualización de rol a PENDIENTE_REVISION).
Solicitudes de Suscripción (subscription_requests)	Almacena el historial de intentos de pago. Contiene el plan_id solicitado, monto_transferido, fecha_subida, comprobante_path, y el estado (ej: pendiente, aprobada, rechazada).	SubscriptionRequestsManagement.vue y admin.subscription.service.js (Lectura y manipulación).
Planes (plans)	Almacena la estructura de planes, IDs y precios.	suscripcion.js (Datos plans en el frontend, usados para determinar el plan_id en la solicitud).
Suscripciones Activas (active_subscriptions)	Almacena la licencia activa de un usuario, incluyendo user_id, plan_id, start_date, y end_date.	Necesaria para la lógica de Aprobación. El Backend Controller debe crear un registro aquí al aprobar la solicitud.
Exportar a Hojas de cálculo
Secuencia Lógica de Vistas (Flujo de Suscripción)
Registro/Login (Usuario con rol predeterminado, ej., PENDIENTE_PAGO).
Vista de Suscripción (El usuario ve los planes en base a suscripcion.js).
Envío de Pago (El usuario selecciona un plan y sube el comprobante).
Acción: suscripcion.js -> submitPaymentProof.
Resultado: El rol del usuario cambia a PENDIENTE_REVISION. Se crea un registro en la tabla subscription_requests.
Panel de Administración (Admin)
El Admin navega a Gestión de Solicitudes de Suscripción (SubscriptionRequestsManagement.vue).
Ve el listado de usuarios con rol PENDIENTE_REVISION.
Revisa el comprobante (openComprobante).
Decisión del Admin:
Aprobar:
Acción: handleAction(id, 'approve').
Resultado (Backend): El usuario obtiene el rol editor (o similar) y se crea una active_subscriptions.
Rechazar:
Acción: handleAction(id, 'reject').
Resultado (Backend): El usuario vuelve al rol PENDIENTE_PAGO.
Este flujo es robusto y utiliza la administración de roles como el principal motor de estado del usuario, permitiendo la integración de las dos secciones de administración.